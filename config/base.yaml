SmartShudao:
  # 状态  开发 dev , 生产 prod
  # logging_level : debug info warning error
  environment: { model: "dev", logging_level: debug ,show_merge_yaml: true }
  # 主机、端口、默认页
  webapp: {
    name: "数道智融科技有限公司 - Web应用程序", version: "v0.1.1",
    host: "0.0.0.0", port: 8000, page: "pages/index.html",
    workers: 5, reload: false
  }
  # 认证、鉴权
  auth: {
    token_jwt_secret_key: "",  # token 的key
    token_jwt_expire_minutes: 60,
    rebuild_auth_rule: false, # 系统启动时候，自动扫描 AuthService 类，提取 验证信息
    default_admin_roles: [ "admin" ], # 添加的默认角色
    default_admin_users: [ "admin","lf_shao" ]
  }
  # 路由配置
  routers:
    # name 是包名「可以直接写子包，但是要写全」，注意: 不是目录名
    - { name: "shudaodao_core", "prefix": "" }
    - { name: "shudaodao_common", "prefix": "/api", "tags": [ ] }

  # ID 生成器（雪花算法） instance_id: 实例ID/机器ID ，多节点部署时修改
  generate_snowflake: { instance_id: 1 }
  # 存储
  storage:
    # 数据库存储
    database:
      - {
        name: "Admin",  enabled: true,
        dialect: "postgresql", driver: "asyncpg",
        url: "postgres:postgres@localhost:5432/postgres",
        connect_args: { },
        echo: false
      }
      - { name: "Auth",  enabled: true,  dialect: "sqlite", driver: "aiosqlite",
          url: "database/shudaodao_auth.db",
          connect_args: { "check_same_thread": False },  echo: false
      }
      #      - { name: "Admin",  enabled: true,  dialect: "sqlite", driver: "aiosqlite",
      #          url: "database/shudaodao_auth.db", # 和 Auth 共用，可单独分离
      #          connect_args: { "check_same_thread": False },  echo: false
      #      }
      - { name: "Enum",  enabled: true,  dialect: "sqlite", driver: "aiosqlite",
          url: "database/shudaodao_auth.db", # shudaodao_enum
          connect_args: { "check_same_thread": False },  echo: false
      }
    # redis 存储
    redis:
      # 第一个节点 name:"Default" 不建议修改
      - { name: "Default", host: "localhost", port: 6379, db: 0 ,kwargs: { } }
      # Auth 是核心框架使用的 redis 库，包含系统默认的各种用途
      - { name: "Auth", host: "localhost", port: 6379, db: 0 ,kwargs: { } }
      # Context 是模型上下文的 Redis 库
      - { name: "Context", host: "localhost", port: 6379, db: 0 ,kwargs: { } }
      # Context 是 OpenAI 标准接口的上下文 Redis 库
      - { name: "Context_OpenAI", host: "localhost", port: 6379, db: 1 ,kwargs: { } }
    # 硬盘存储
    disk:
      # 第一个节点 name:"Default" 不建议修改
      - { name: "Default", path: "storage/default" }
      # 上传目录
      - { name: "Upload", path: "admin/uploads/" }
      # 对话上下文
      - { name: "Context", path: "storage/cache/context" }
      - { name: "Context_OpenAI", path: "storage/cache/context_openai" }
      # 向量库
      - { name: "Vector", path: "storage/vector/" }
  # 模型
  models:
    # 上下文持久化
    context:
      # 第一个节点 name:"Default" 不建议修改
      - { name: "Default",  storage: "disabled" }
      - { name: "AgentChat", storage: "disk", disk: "Context", redis: "Context" }
      - { name: "OpenAIChat", storage: "disk", disk: "Context_OpenAI", redis: "Context_OpenAI" }
    # 生成模型
    language_models: [ ]
    # 嵌入模型
    embedding_models: [ ]
    # 重排序模型
    reranker_models: [ ]
